apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-proxy
  namespace: kube-system
  labels:
    application: kube-proxy
    version: {{ .ConfigItems.kubernetes_version }}
spec:
  selector:
    matchLabels:
      application: kube-proxy
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      name: kube-proxy
      labels:
        application: kube-proxy
        version: {{ .ConfigItems.kubernetes_version }}
      annotations:
        config/hash: {{"configmap.yaml" | manifestHash}}
    spec:
      priorityClassName: system-node-critical
{{ if index .ConfigItems "enable_rbac"}}
      serviceAccountName: kube-proxy
{{ else }}
      serviceAccountName: system
{{ end }}
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      hostNetwork: true
      containers:
      - name: kube-proxy
        image: {{ .ConfigItems.hyperkube_image }}:{{ .ConfigItems.kubernetes_version }}
        command:
        - /hyperkube
        - proxy
        - --config=/config/kube-proxy.yaml
        - --v=2
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 50m
            memory: 200Mi
          limits:
            cpu: 50m
            memory: 200Mi
        volumeMounts:
        - name: ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: true
        - name: kubeconfig
          mountPath: /etc/kubernetes/kubeconfig
          readOnly: true
        - name: etc-kube-ssl
          mountPath: /etc/kubernetes/ssl
          readOnly: true
        - name: kube-proxy-config
          mountPath: /config
          readOnly: true
      volumes:
      - name: ssl-certs
        hostPath:
          path: /usr/share/ca-certificates
      - name: kubeconfig
        hostPath:
          path: /etc/kubernetes/kubeconfig
      - name: etc-kube-ssl
        hostPath:
          path: /etc/kubernetes/ssl
      - name: kube-proxy-config
        configMap:
          name: kube-proxy-config
